{"version":3,"sources":["utils/bmap-wx.js"],"names":["BMapWX","param","ak","type","success","fail","complete","wx","getLocation","that","searchparam","query","scope","filter","coord_type","page_size","page_num","output","sn","timestamp","radius","ret_coordtype","otherparam","iconPath","iconTapPath","width","height","alpha","locationsuccess","result","request","url","data","header","method","res","poiArr","outputRes","i","length","id","latitude","longitude","title","address","telephone","errMsg","statusCode","locationfail","locationcomplete","getWXLocation","location","split","suggestionparam","region","city_limit","regeocodingparam","coordtype","pois","poiObj","desc","business","_this","weatherparam","setStorageSync","weatherArr","currentCity","pm25","date","curTemperature","slice","indexOf","temperature","weatherDesc","wind","statusCodeWx","city","getStorageSync","key","setData","HeWeather","HeWeather5","module","exports"],"mappings":"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","file":"bmap-wx.js","sourcesContent":["/*eslint-disable*/\r\n/**\r\n * @file 微信小程序JSAPI\r\n * @author 崔健 cuijian03@baidu.com 2017.01.10\r\n */\r\n/**\r\n * 百度地图微信小程序API类\r\n *\r\n * @class\r\n */\r\nclass BMapWX {\r\n\r\n    /**\r\n     * 百度地图微信小程序API类\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(param) {\r\n        this.ak = param[\"ak\"];\r\n    }\r\n\r\n    /**\r\n     * 使用微信接口进行定位\r\n     *\r\n     * @param {string} type 坐标类型\r\n     * @param {Function} success 成功执行\r\n     * @param {Function} fail 失败执行\r\n     * @param {Function} complete 完成后执行\r\n     */\r\n    getWXLocation(type, success, fail, complete) {\r\n        type = type || 'gcj02',\r\n        success = success || function () {};\r\n        fail = fail || function () {};\r\n        complete = complete || function () {};\r\n        wx.getLocation({\r\n            type: type,\r\n            success: success,\r\n            fail: fail,\r\n            complete:complete\r\n        });\r\n    }\r\n\r\n    /**\r\n     * POI周边检索\r\n     *\r\n     * @param {Object} param 检索配置\r\n     * 参数对象结构可以参考\r\n     * http://lbsyun.baidu.com/index.php?title=webapi/guide/webservice-placeapi\r\n     */\r\n    search(param) {\r\n        var that = this;\r\n        param = param || {};\r\n        let searchparam = {\r\n            query: param[\"query\"] || '生活服务$美食&酒店',\r\n            scope: param[\"scope\"] || 1,\r\n            filter: param[\"filter\"] || '',\r\n            coord_type: param[\"coord_type\"] || 2,\r\n            page_size: param[\"page_size\"] || 10,\r\n            page_num: param[\"page_num\"] || 0,\r\n            output: param[\"output\"] || 'json',\r\n            ak: that.ak,\r\n            sn: param[\"sn\"] || '',\r\n            timestamp: param[\"timestamp\"] || '',\r\n            radius: param[\"radius\"] || 2000,\r\n            ret_coordtype: 'gcj02ll'\r\n        };\r\n        let otherparam = {\r\n            iconPath: param[\"iconPath\"],\r\n            iconTapPath: param[\"iconTapPath\"],\r\n            width: param[\"width\"],\r\n            height: param[\"height\"],\r\n            alpha: param[\"alpha\"] || 1,\r\n            success: param[\"success\"] || function () {},\r\n            fail: param[\"fail\"] || function () {}\r\n        };\r\n        let type = 'gcj02';\r\n        let locationsuccess = function (result) {\r\n            searchparam[\"location\"] = result[\"latitude\"] + ',' + result[\"longitude\"];\r\n            wx.request({\r\n                url: 'https://api.map.baidu.com/place/v2/search',\r\n                data: searchparam,\r\n                header: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                method: 'GET',\r\n                success(data) {\r\n                    let res = data[\"data\"];\r\n                    if (res[\"status\"] === 0) {\r\n                        let poiArr = res[\"results\"];\r\n                        // outputRes 包含两个对象，\r\n                        // originalData为百度接口返回的原始数据\r\n                        // wxMarkerData为小程序规范的marker格式\r\n                        let outputRes = {};\r\n                        outputRes[\"originalData\"] = res;\r\n                        outputRes[\"wxMarkerData\"] = [];\r\n                        for (let i = 0; i < poiArr.length; i++) {\r\n                            outputRes[\"wxMarkerData\"][i] = {\r\n                                id: i,\r\n                                latitude: poiArr[i][\"location\"][\"lat\"],\r\n                                longitude: poiArr[i][\"location\"][\"lng\"],\r\n                                title: poiArr[i][\"name\"],\r\n                                iconPath: otherparam[\"iconPath\"],\r\n                                iconTapPath: otherparam[\"iconTapPath\"],\r\n                                address: poiArr[i][\"address\"],\r\n                                telephone: poiArr[i][\"telephone\"],\r\n                                alpha: otherparam[\"alpha\"],\r\n                                width: otherparam[\"width\"],\r\n                                height: otherparam[\"height\"]\r\n                            } \r\n                        }\r\n                        otherparam.success(outputRes);\r\n                    } else {\r\n                        otherparam.fail({\r\n                            errMsg: res[\"message\"],\r\n                            statusCode: res[\"status\"]\r\n                        });\r\n                    }\r\n                },\r\n                fail(data) {\r\n                    otherparam.fail(data);\r\n                }\r\n            });\r\n        }\r\n        let locationfail = function (result) {\r\n            otherparam.fail(result);\r\n        };\r\n        let locationcomplete = function (result) {\r\n        };\r\n        if (!param[\"location\"]) {\r\n            that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);\r\n        } else {\r\n            let longitude = param.location.split(',')[1];\r\n            let latitude = param.location.split(',')[0];\r\n            let errMsg = 'input location';\r\n            let res = {\r\n                errMsg: errMsg,\r\n                latitude: latitude,\r\n                longitude: longitude\r\n            };\r\n            locationsuccess(res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * sug模糊检索\r\n     *\r\n     * @param {Object} param 检索配置\r\n     * 参数对象结构可以参考\r\n     * http://lbsyun.baidu.com/index.php?title=webapi/place-suggestion-api\r\n     */\r\n    suggestion(param) {\r\n        var that = this;\r\n        param = param || {};\r\n        let suggestionparam = {\r\n            query: param[\"query\"] || '',\r\n            region: param[\"region\"] || '全国',\r\n            city_limit: param[\"city_limit\"] || false,\r\n            output: param[\"output\"] || 'json',\r\n            ak: that.ak,\r\n            sn: param[\"sn\"] || '',\r\n            timestamp: param[\"timestamp\"] || '',\r\n            ret_coordtype: 'gcj02ll'\r\n        };\r\n        let otherparam = {\r\n            success: param[\"success\"] || function () {},\r\n            fail: param[\"fail\"] || function () {}\r\n        };\r\n        wx.request({\r\n            url: 'https://api.map.baidu.com/place/v2/suggestion',\r\n            data: suggestionparam,\r\n            header: {\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            method: 'GET',\r\n            success(data) {\r\n                let res = data[\"data\"];\r\n                if (res[\"status\"] === 0) {\r\n                    otherparam.success(res);\r\n                } else {\r\n                    otherparam.fail({\r\n                        errMsg: res[\"message\"],\r\n                        statusCode: res[\"status\"]\r\n                    });\r\n                }\r\n            },\r\n            fail(data) {\r\n                otherparam.fail(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * rgc检索（坐标->地点描述）\r\n     *\r\n     * @param {Object} param 检索配置\r\n     * 参数对象结构可以参考\r\n     * http://lbsyun.baidu.com/index.php?title=webapi/guide/webservice-geocoding\r\n     */\r\n    regeocoding(param) {\r\n        var that = this;\r\n        param = param || {};\r\n        let regeocodingparam = {\r\n            coordtype: param[\"coordtype\"] || 'gcj02ll',\r\n            pois: param[\"pois\"] || 0,\r\n            output: param[\"output\"] || 'json',\r\n            ak: that.ak,\r\n            sn: param[\"sn\"] || '',\r\n            timestamp: param[\"timestamp\"] || '',\r\n            ret_coordtype: 'gcj02ll'\r\n        };\r\n        let otherparam = {\r\n            iconPath: param[\"iconPath\"],\r\n            iconTapPath: param[\"iconTapPath\"],\r\n            width: param[\"width\"],\r\n            height: param[\"height\"],\r\n            alpha: param[\"alpha\"] || 1,\r\n            success: param[\"success\"] || function () {},\r\n            fail: param[\"fail\"] || function () {}\r\n        };\r\n        let type = 'gcj02';\r\n        let locationsuccess = function (result) {\r\n            regeocodingparam[\"location\"] = result[\"latitude\"] + ',' + result[\"longitude\"];\r\n            wx.request({\r\n                url: 'https://api.map.baidu.com/geocoder/v2/',\r\n                data: regeocodingparam,\r\n                header: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                method: 'GET',\r\n                success(data) {\r\n                    let res = data[\"data\"];\r\n                    if (res[\"status\"] === 0) {\r\n                        let poiObj = res[\"result\"];\r\n                        // outputRes 包含两个对象，\r\n                        // originalData为百度接口返回的原始数据\r\n                        // wxMarkerData为小程序规范的marker格式\r\n                        let outputRes = {};\r\n                        outputRes[\"originalData\"] = res;\r\n                        outputRes[\"wxMarkerData\"] = [];    \r\n                        outputRes[\"wxMarkerData\"][0] = {\r\n                            id: 0,\r\n                            latitude: result[\"latitude\"],\r\n                            longitude: result[\"longitude\"],\r\n                            address: poiObj[\"formatted_address\"],\r\n                            iconPath: otherparam[\"iconPath\"],\r\n                            iconTapPath: otherparam[\"iconTapPath\"],\r\n                            desc: poiObj[\"sematic_description\"],\r\n                            business: poiObj[\"business\"],\r\n                            alpha: otherparam[\"alpha\"],\r\n                            width: otherparam[\"width\"],\r\n                            height: otherparam[\"height\"]\r\n                        }\r\n                        otherparam.success(outputRes);\r\n                    } else {\r\n                        otherparam.fail({\r\n                            errMsg: res[\"message\"],\r\n                            statusCode: res[\"status\"]\r\n                        });\r\n                    }\r\n                },\r\n                fail(data) {\r\n                    otherparam.fail(data);\r\n                }\r\n            });\r\n        };\r\n        let locationfail = function (result) {\r\n            otherparam.fail(result);\r\n        }\r\n        let locationcomplete = function (result) {\r\n        };\r\n        if (!param[\"location\"]) {\r\n            that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);\r\n        } else {\r\n            let longitude = param.location.split(',')[1];\r\n            let latitude = param.location.split(',')[0];\r\n            let errMsg = 'input location';\r\n            let res = {\r\n                errMsg: errMsg,\r\n                latitude: latitude,\r\n                longitude: longitude\r\n            };\r\n            locationsuccess(res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 天气检索\r\n     *\r\n     * @param {Object} param 检索配置\r\n     */\r\n    weather(param,_this) {\r\n        var that = this\r\n        param = param || {};\r\n        let weatherparam = {\r\n            coord_type: param[\"coord_type\"] || 'gcj02',\r\n            output: param[\"output\"] || 'json',\r\n            ak: that.ak,\r\n            sn: param[\"sn\"] || '',\r\n            timestamp: param[\"timestamp\"] || ''\r\n        };\r\n        let otherparam = {\r\n            success: param[\"success\"] || function () {},\r\n            fail: param[\"fail\"] || function () {}\r\n        };\r\n        let type = 'gcj02';\r\n        let locationsuccess = function (result) {\r\n            wx.setStorageSync('siteInfo', result);\r\n            weatherparam[\"location\"] = result[\"longitude\"] + ',' + result[\"latitude\"];\r\n            wx.request({\r\n                url: 'https://api.map.baidu.com/telematics/v3/weather',\r\n                data: weatherparam,\r\n                header: {\r\n                    \"content-type\": \"application/json\"\r\n                },\r\n                method: 'GET',\r\n                success(data) {\r\n                    let res = data[\"data\"];\r\n                    if (res[\"error\"] === 0 && res[\"status\"] === 'success') {\r\n                        let weatherArr = res[\"results\"];\r\n                        // outputRes 包含两个对象，\r\n                        // originalData为百度接口返回的原始数据\r\n                        // wxMarkerData为小程序规范的marker格式\r\n                        let outputRes = {};\r\n                        outputRes[\"originalData\"] = res;\r\n                        outputRes[\"currentWeather\"] = [];    \r\n                        outputRes[\"currentWeather\"][0] = {\r\n                            currentCity: weatherArr[0][\"currentCity\"],\r\n                            pm25: weatherArr[0][\"pm25\"],\r\n                            date: weatherArr[0][\"weather_data\"][0][\"date\"],\r\n                            curTemperature: weatherArr[0][\"weather_data\"][0][\"date\"].slice(weatherArr[0][\"weather_data\"][0][\"date\"].indexOf('：') + 1).slice(0,(weatherArr[0][\"weather_data\"][0][\"date\"].slice(weatherArr[0][\"weather_data\"][0][\"date\"].indexOf('：') + 1).indexOf(')') - 1)) + '°',\r\n                            temperature: weatherArr[0][\"weather_data\"][0][\"temperature\"],\r\n                            weatherDesc: weatherArr[0][\"weather_data\"][0][\"weather\"],\r\n                            wind: weatherArr[0][\"weather_data\"][0][\"wind\"]\r\n                        };\r\n                        otherparam.success(outputRes);\r\n                    } else {\r\n                        otherparam.fail({\r\n                            errMsg: res[\"message\"],\r\n                            statusCodeWx: res[\"status\"]\r\n                        });\r\n                    }\r\n                    wx.request({\r\n                      url: 'https://free-api.heweather.com/v5/forecast',\r\n                      data: {\r\n                        city: wx.getStorageSync('siteInfo').longitude + ',' + wx.getStorageSync('siteInfo').latitude,\r\n                        key: '10c6e97476d54c1f86d8ffcd5639475b'\r\n                      },\r\n                      success (res) {\r\n                        _this.setData({\r\n                          HeWeather: res.data.HeWeather5[0]\r\n                        })\r\n                      }\r\n                    })\r\n                },\r\n                fail(data) {\r\n                    otherparam.fail(data);\r\n                }\r\n            });\r\n        }\r\n        let locationfail = function (result) {\r\n            otherparam.fail(result);\r\n        }\r\n        let locationcomplete = function (result) {\r\n        }\r\n        if (!param[\"location\"]) {\r\n          that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);\r\n        } else {\r\n            let longitude = param.location.split(',')[0];\r\n            let latitude = param.location.split(',')[1];\r\n            let errMsg = 'input location';\r\n            let res = {\r\n                errMsg: errMsg,\r\n                latitude: latitude,\r\n                longitude: longitude\r\n            };\r\n            locationsuccess(res);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports.BMapWX = BMapWX;"]}